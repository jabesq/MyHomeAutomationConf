homeassistant:
    # Name of the location where Home Assistant is running
    name: Home
    # C for Celcius, F for Fahrenheit
    temperature_unit: C
    # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
    time_zone: Europe/Paris
    #location required to calculate the time the sun rises and sets
    latitude: REDACTED
    longitude: REDACTED
    customize:
        input_boolean.someone_home:
            hidden: false

#Geofencing setup
zone:
    name: work
    latitude: REDACTED
    longitude: REDACTED
    radius: 100
    icon: mdi:briefcase

logbook:

# Allows you to issue voice commands from the frontend
conversation:

# Track the sun
sun:

# Enables support for tracking state changes over time.
history:

# Enables the frontend
frontend:

# Checks for available updates
updater:

# Discover some devices automatically
discovery:

#WeMo Devices
wemo:

#Media Player
media_player:
  platform: plex

#IFTTT
ifttt:
    key: REDACTED

#Notifier
notify:
    platform: pushbullet
    api_key: REDACTED

#Detect all device on network + my iCloud device + OwnTracks User (MQTT)
device_tracker:
  - platform: nmap_tracker
    hosts: 192.168.1.10-200
    home_interval: 10
    # If new discovered devices are tracked by default (default: yes)
    track_new_devices: no

  - platform: icloud
    username: REDACTED
    password: REDACTED
    # If new discovered devices are tracked by default (default: yes)
    track_new_devices: yes
    # Seconds between each scan for new devices (default: 12)
    interval_seconds: 300
    # Seconds to wait till marking someone as not home after not being seen (default: 180)
    consider_home: 180

  - platform: owntracks
    max_gps_accuracy: 150
    # If new discovered devices are tracked by default (default: yes)
    track_new_devices: yes
    # Seconds between each scan for new devices (default: 12)
    interval_seconds: 300
    # Seconds to wait till marking someone as not home after not being seen (default: 180)
    consider_home: 180

#MQTT Broker
mqtt:
    broker: 127.0.0.1
    port: 1883
    client_id: home-assistant
    keepalive: 60

#Sensors
sensor:
  - platform: forecast
    api_key: REDACTED
    monitored_conditions:
      - summary
      - precip_intensity
      - precip_probability
      - apparent_temperature
      - dew_point
      - wind_speed
      - wind_bearing
      - cloud_cover
      - pressure
      - visibility
      - ozone

  - platform: netatmo
    api_key: REDACTED
    secret_key: REDACTED
    username: REDACTED
    payssword: REDACTED
    modules:
        Station:
          - temperature
          - humidity
          - noise
          - pressure
          - co2
        Chambre:
          - temperature
          - humidity
          - co2
        ExtÃ©rieur:
          - temperature
          - humidity

  - platform: speedtest
    monitored_conditions:
      - ping
      - download
      - upload

  - platform: template
    sensors:
        conso_tv:
            unit_of_measurement: 'W.h'
            friendly_name: 'Conso TV'
            value_template: >-
                {%- if is_state('switch.tv_hifi', 'on') %}
                    {%- if states('switch.tv_hifi.attributes.current_power_mwh') %}
                        {{ states.switch.tv_hifi.attributes.current_power_mwh | multiply(0.001) }}
                    {% else %}
                            {{ states.sensor.conso_tv }}
                    {%- endif %}
                {% else %}
                    {{ 0 }}
                {%- endif %}
        battery_iphone:
            unit_of_measurement: '%'
            friendly_name: 'Battery iPhone'
            value_template: >-
                {%- if states.device_tracker.iphone.attributes.battery %}
                    {{ states.device_tracker.iphone.attributes.battery }}
                {% else %}
                    {{ states.sensor.battery_iphone.state }}
                {%- endif %}

#These inputs are mainly used as script flags
input_boolean:
    someone_home:
        name: Someone detected
        initial: off
    reset_tv_hifi:
        name: TV reset Wanted
        initial: off
    tv_hifi_reset_done:
        name: TV has been reset
        initial: off


##################################################################
#
#Let's manage and interact all these devices
#
##################################################################

group:
    Salon:
      - switch.lumiere_salon
      - switch.tv_hifi
      - media_player.apple_tv
      - sensor.netatmo_station_pressure
      - sensor.netatmo_station_temperature
      - sensor.netatmo_station_co2
      - sensor.netatmo_station_humidity
      - sensor.netatmo_station_noise

    Weather:
      - sensor.weather_condition
      - sensor.weather_summary
      - sun.sun
      - sensor.netatmo_extrieur_temperature
      - sensor.weather_apparent_temperature
      - sensor.netatmo_extrieur_humidity
      - sensor.weather_cloud_coverage
      - sensor.weather_dew_point
      - sensor.weather_ozone
      - sensor.weather_precip_probability
      - sensor.weather_precip_intensity
      - sensor.weather_pressure
      - sensor.weather_visibility
      - sensor.weather_wind_bearing
      - sensor.weather_wind_speed

    Chambre:
      - sensor.netatmo_chambre_temperature
      - sensor.netatmo_chambre_co2
      - sensor.netatmo_chambre_humidity

    Speedtest:
      - sensor.speedtest_ping
      - sensor.speedtest_download
      - sensor.speedtest_upload

automation:
  - alias: 'Detect Standby mode for TV'
    trigger:
        platform: numeric_state
        entity_id: sensor.conso_tv
        below: 13
    condition:
      - platform: state
        entity_id: switch.tv_hifi
        state: 'on'
      - platform: state
        entity_id: input_boolean.reset_tv_hifi
        state: 'off'
    action:
        service: input_boolean.turn_on
        data:
            entity_id: input_boolean.reset_tv_hifi

  - alias: 'TV has been restarted (reset flags)'
    trigger:
        platform: numeric_state
        entity_id: sensor.conso_tv
        above: 13
    condition:
      - platform: state
        entity_id: input_boolean.reset_tv_hifi
        state: 'on'
    action:
        service: script.turn_on
        data:
            entity_id: script.reset_flags

  - alias: 'Someone known has been seen'
    trigger:
        platform: event
        event_type: someone_known_seen
    action:
        service: script.turn_on
        data:
            entity_id: script.someone_seen

  - alias: 'Reset TV/Hifi'
    trigger:
      - platform: state
        entity_id: input_boolean.reset_tv_hifi
        state: 'on'
      - platform: state
        entity_id: input_boolean.someone_home
        state: 'on'
    condition:
      - platform: state
        entity_id: input_boolean.reset_tv_hifi
        state: 'on'
      - platform: state
        entity_id: input_boolean.someone_home
        state: 'on'
      - platform: state
        entity_id: input_boolean.tv_hifi_reset_done
        state: 'off'
    action:
        service: script.turn_on
        data:
            entity_id: script.reset_tv_hifi


#One action is good, but several is better
script:
    tv_standby:
        alias: TV in standby
        sequence:
          - alias: TV reset is asked
            service: input_boolean.turn_on
            data:
                entity_id: input_boolean.reset_tv_hifi

    reset_tv_hifi:
        alias: Reset TV and Hifi (to shutdown Hifi)
        sequence:
          - service: notify.notify
            data:
                message: TV/Hifi Reset has been triggered
          - service: switch.turn_off
            data:
                entity_id: switch.tv_hifi
          - service: input_boolean.turn_on
            data:
                entity_id: input_boolean.tv_hifi_reset_done
          - delay:
                seconds: 10
          - alias: Restart TV and Hifi
            service: switch.turn_on
            data:
                entity_id: switch.tv_hifi
          - service: notify.notify
            data:
                message: TV/Hifi Reset has been done

    timer_someone_seen:
        alias: person left after 10 minutes
        sequence:
          - delay:
                minutes: 10
          - alias: everybody left
            service: input_boolean.turn_off
            data:
                entity_id: input_boolean.someone_home

    someone_seen:
        alias: Someone has been seen
        sequence:
          - service: notify.notify
            data:
                message: Someone has been seen
          - service: script.turn_off
            data:
                entity_id: script.timer_someone_seen
          - alias: Someone has been seen
            service: input_boolean.turn_on
            data:
                entity_id: input_boolean.someone_home
          - service: script.turn_on
            data:
                entity_id: script.timer_someone_seen

    reset_flags:
        sequence:
          - service: input_boolean.turn_off
            data:
                entity_id: input_boolean.reset_tv_hifi
          - service: input_boolean.turn_off
            data:
                entity_id: input_boolean.tv_hifi_reset_done

